<?php

/**
 * @file
 * Contains specialfields.module.
 */

use Drupal\Core\Form\FormStateInterface;


/**
 * Implements hook_form_BASE_FORM_ID_alter() for \Drupal\node\NodeForm.
 *
 * Adds configurable message to each content type.
 *
 */
function prime_nodes_form_node_type_edit_form_alter(&$form, FormStateInterface $form_state) {
  /* xdebug_break(); */
  /* kint($form); */
  /* $config = $config_factory->getEditable('prime_nodes.settings'); */
  $config = \Drupal::service('config.factory')->getEditable('prime_nodes.settings');

  $types = node_type_get_names();

  $form['prime_msg']['type'] = [
    '#type' => 'select',
    '#title' => t('Node Type'),
    '#options' => $types,
  ];

  $form['prime_msg']['msg'] = [
    '#type' => 'textfield',
    '#title' => t('Message'),
  ];
}

/**
 * Implements hook_form_alter().
 */
function prime_nodes_form_alter(&$form, $form_state, $form_id) {
  $types  = ['node_article_edit_form', 'node_page_edit_form'];
  if (in_array($form_id, $types)) {
    $form['#validate'][] = 'prime_nodes_date_form_validate';
  }
}

function prime_nodes_date_form_validate($form, &$form_state) {
  $create_day = $form_state->getValue('created')[0]['value']->format("d");
  $is_prime = isPrime($create_day);

  if (!$is_prime) {
    $form_state->setErrorByName('created', 'The day in created must be a prime number.');
  }
}
/**
 * Determine if input number is a prime number
 *
 * @param $n
 *   One number
 *
 * @return boolean
 *   The value representing whether or  not the input is a prime number.
 */
function isPrime($n) {
  for($x=2; $x<$n; $x++) {
    if($n %$x ==0) {
      return 0;
    }
  }
  return 1;
}

/* $config */
/*   ->set('prime_nodes_msg', []) */
/*   ->save(); */
