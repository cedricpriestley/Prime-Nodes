<?php

/**
 * @file
 * Contains specialfields.module.
 */

use Drupal\Core\Form\FormStateInterface;


/**
 * Implements hook_form_BASE_FORM_ID_alter() for \Drupal\node\NodeForm.
 *
 * Adds configurable message to each content type.
 *
 */
function prime_nodes_form_node_type_edit_form_alter(&$form, FormStateInterface $form_state) {
/*$types = \Drupal::entityTypeManager()
  ->getStorage('node_type')
->loadMultiple();*/
  /* $types = node_type_get_names(); */
  /* var_dump($types); */

    /* $config = $config_factory->getEditable('prime_nodes.settings'); */
    $config = \Drupal::service('config.factory')->getEditable('prime_nodes.settings');

$types = node_type_get_names();

$form['prime_msg']['type'] = [
  '#type' => 'select',
  '#title' => t('Node Type'),
  '#options' => $types,
];

$form['prime_msg']['msg'] = [
  '#type' => 'textfield',
  '#title' => t('Message'),
];
/* $form['#validate'][] = 'prime_nodes_date_form_validate'; */
}

/**
 * Implements hook_form_alter().
 */
/* function prime_nodes_form_alter(&$form, $form_state, $form_id) { */
/*   if ($form_id === "node_type_edit_form") { */
/*     /1* print_r($form_id); *1/ */
/*   } */

/*   if (true) */
/*     $form['#validate'][] = 'prime_nodes_date_form_validate'; */
/* } */

function prime_nodes_date_form_validate($form, &$form_state) {
  /* echo 'made it here';exit; */
  var_dump($for);
  /* if ($form_state['values']['date'] == 'test') { */
  /*   form_set_error('date', 'The creation day must be a prime number'); */
  /* } */
}
/**
 * Determine if input number is a prime number
 *
 * @param $n
 *   One number
 *
 * @return boolean
 *   The value representing whether or  not the input is a prime number.
 */
function isPrime($n) {
  for($x=2; $x<$n; $x++) {
    if($n %$x ==0) {
      return 0;
    }
  }
  return 1;
}

/* $config */
  /*   ->set('prime_nodes_msg', []) */
  /*   ->save(); */
